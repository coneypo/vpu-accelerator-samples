syntax = "proto2";

option optimize_for = LITE_RUNTIME;

package hddl;

enum MsgReqType {
    CREATE_REQUEST = 0;
    DESTROY_REQUEST = 1;
    MODIFY_REQUEST = 2;
    PLAY_REQUEST = 3;
    PAUSE_REQUEST = 4;
    STOP_REQUEST = 5;
}

enum MsgRspType {
    CREATE_RESPONSE = 0;
    DESTROY_RESPONSE = 1;
    MODIFY_RESPONSE = 2;
    PLAY_RESPONSE = 3;
    PAUSE_RESPONSE = 4;
    STOP_RESPONSE = 5;

    REGISTER_EVENT = 10;
    METADATA_EVENT = 11;
    EOS_EVENT = 12;
    ERROR_EVENT = 13;
}

message CreatePipelineRequest {
    optional string launch_data = 1;
    optional string config_data = 2;
}

message CreatePipelineResponse {
}

message DestroyPipelineRequest {
}

message DestroyPipelineResponse {
}

message ModifyPipelineRequest {
    optional string config_data = 1;
}

message ModifyPipelineResponse {
}

message PlayPipelineRequest {
}

message PlayPipelineResponse {
}

message PausePipelineRequest {
}

message PausePipelineResponse {
}

message StopPipelineRequest {
}

message StopPipelineResponse {
}

message RegisterEvent {
}

message MetadataEvent {
    optional string metadata = 1;
}

message EosEvent {
}

message ErrorEvent {
}

message MsgBase {
    optional uint64 send_time = 1;
    optional uint64 receive_time = 2;
}

message MsgRequest {
    optional MsgBase           base = 1;
    optional MsgReqType        req_type = 2;
    optional uint64            req_seq_no = 3;
    optional int32             pipeline_id = 4;

    oneof msg {
        CreatePipelineRequest  create = 10;
        DestroyPipelineRequest destroy = 11;
        ModifyPipelineRequest  modify = 12;
        PlayPipelineRequest    play = 13;
        PausePipelineRequest   pause = 14;
        StopPipelineRequest    stop = 15;
    }
}

message MsgResponse {
    optional MsgBase            base = 1;
    optional MsgRspType         rsp_type = 2;
    optional uint64             req_seq_no = 3;
    optional int32              ret_code = 4;
    optional int32              pipeline_id = 5;

    oneof msg {
        CreatePipelineResponse  create = 10;
        DestroyPipelineResponse destroy = 11;
        ModifyPipelineResponse  modify = 12;
        PlayPipelineResponse    play = 13;
        PausePipelineResponse   pause = 14;
        StopPipelineResponse    stop = 15;

        RegisterEvent           register = 20;
        MetadataEvent           metadata = 21;
        EosEvent                eos = 22;
        ErrorEvent              error = 23;
    }
}
